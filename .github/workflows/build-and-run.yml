name: Build-And-Run Tests

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    env:
      ALL_EXCLUDE: stage_dem

    defaults:
      run:
        shell: bash -l {0}
    
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
        - os: macos-latest
          ctest_exclude: -E ".*($ALL_EXCLUDE|raster|unwrap.snaphu)"
        - os: ubuntu-latest
          ctest_exclude: -E ".*($ALL_EXCLUDE)"
    runs-on: ${{ matrix.os }}

    steps:
      - name: Github Repo Checkout
        uses: actions/checkout@v2
#      - name: Setup Python v3.9
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.9
      - name: Setup Environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment.yml
          environment-name: isce3-ci-sandbox
      - name: Environment Variables Preset
        run: |
          export ISCE3_PREFIX=${GITHUB_WORKSPACE}/install
          conda env config vars set ISCE3_PREFIX=$ISCE3_PREFIX
          conda env config vars set PYTHONPATH=$PYTHONPATH:$ISCE3_PREFIX/packages
          if test -d "$ISCE3_PREFIX/lib64"; then
            export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ISCE3_PREFIX/lib64:$CONDA_PREFIX/bin/ld
          else
            export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ISCE3_PREFIX/lib:$CONDA_PREFIX/bin/ld
          fi
          conda env config vars set LD_LIBRARY_PATH=$LD_LIBRARY_PATH
          if [ "$RUNNER_OS" == "macOS" ]; then
            conda env config vars set DYLD_LIBRARY_PATH=$LD_LIBRARY_PATH
          fi
      - name: Configure CMAKE
        run: |
          cmake \
            -B build \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=$ISCE3_PREFIX \
            -DCMAKE_PREFIX_PATH=$CONDA_PREFIX \
            .
      - name: Build Project
        run: |
          cmake --build build --parallel
      - name: Install Project
        run: |
          cmake --build build --target install --parallel
      - name: Test Project
        run: |
          ctest --test-dir build --output-on-failure ${{ matrix.ctest_exclude }}
